---
- name: Get AWS EC2 Configuration Settings
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Get EC2 instances information
      amazon.aws.ec2_instance_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
      register: ec2_info

    - name: Extract configuration settings from EC2 instances
      set_fact:
        ec2_config_settings: |
          {% set config_settings = [] %}
          {% for instance in ec2_info.instances %}
          {% set instance_settings = {
            'instance_id': instance.instance_id,
            'instance_type': instance.instance_type,
            'vpc_id': instance.vpc_id,
            'subnet_id': instance.subnet_id,
            'private_ip_address': instance.private_ip_address,
            'public_ip_address': instance.public_ip_address,
            'security_groups': instance.security_groups | map(attribute='group_id') | list,
            'iam_instance_profile': instance.iam_instance_profile.arn if instance.iam_instance_profile is defined else None,
            'tags': instance.tags,
            'block_device_mappings': instance.block_device_mappings,
            'network_interfaces': instance.network_interfaces,
            'image_id': instance.image_id,
            'key_name': instance.key_name,
            'launch_time': instance.launch_time
          } %}
          {% set _= config_settings.append(instance_settings) %}
          {% endfor %}
          {{ config_settings }}

    - name: Return configuration settings as JSON
      set_fact:
        ec2_config_json: "{{ ec2_config_settings | to_json }}"

    - name: Store configuration settings in fact cache
      set_fact:
        ec2_config_cache: "{{ ec2_config_json }}"
        cacheable: true